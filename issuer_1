import plotly.graph_objects as go
from plotly.subplots import make_subplots
import plotly.express as px

# Enhanced data preparation
dolya_df = df_long[(df_long['Type'] == '–î–æ–ª—è,%') & (df_long['Branch'] != '–í—Å–µ')]
branches = kp_df['Branch'].unique()

# Calculate grid dimensions (2 columns)
n_branches = len(branches)
n_rows = (n_branches + 1) // 2  # Round up division

# Create stunning color palette
colors = {
    'kp': '#2E86AB',      # Deep blue
    'dolya': '#A23B72',   # Deep magenta
    'bg': '#F8F9FA',      # Light background
    'grid': '#E9ECEF',    # Grid color
    'text': '#212529'     # Dark text
}

# Create subplots with 2 columns
fig = make_subplots(
    rows=n_rows,
    cols=2,
    subplot_titles=[f"üìä {branch}" for branch in branches],
    vertical_spacing=0.12,   # Increased vertical spacing
    horizontal_spacing=0.08, # Increased horizontal spacing
    specs=[[{"secondary_y": True}, {"secondary_y": True}] for _ in range(n_rows)],
)

# Add traces for each branch
for idx, branch in enumerate(branches):
    row = (idx // 2) + 1
    col = (idx % 2) + 1
    
    # Filter data for current branch
    kp_branch = kp_df[kp_df['Branch'] == branch]
    dolya_branch = dolya_df[dolya_df['Branch'] == branch]
    
    # Enhanced bar trace for –ö–ü
    fig.add_trace(
        go.Bar(
            x=kp_branch['Date'],
            y=kp_branch['Value'],
            name='–ö–ü' if idx == 0 else '',  # Show legend only once
            text=[f"{val:.1f}" for val in kp_branch['Value']],
            textposition='outside',
            textfont=dict(size=10, color=colors['text'], family="Arial Black"),
            hovertemplate='<b>–î–∞—Ç–∞:</b> %{x}<br><b>–ö–ü:</b> %{y:.2f}<extra></extra>',
            marker=dict(
                color=colors['kp'],
                line=dict(color='white', width=1),
                opacity=0.8
            ),
            showlegend=True if idx == 0 else False
        ),
        row=row,
        col=col,
        secondary_y=False,
    )
    
    # Enhanced line trace for –î–æ–ª—è,%
    fig.add_trace(
        go.Scatter(
            x=dolya_branch['Date'],
            y=dolya_branch['Value'],
            name='–î–æ–ª—è,%' if idx == 0 else '',  # Show legend only once
            mode='lines+markers+text',
            text=[f"{val:.3f}%" for val in dolya_branch['Value']],
            textposition='top center',
            textfont=dict(size=11, color=colors['dolya'], family="Arial"),
            hovertemplate='<b>–î–∞—Ç–∞:</b> %{x}<br><b>–î–æ–ª—è:</b> %{y:.4f}%<extra></extra>',
            line=dict(color=colors['dolya'], width=4, dash='solid'),
            marker=dict(
                color=colors['dolya'],
                size=8,
                line=dict(color='white', width=2),
                symbol='circle'
            ),
            showlegend=True if idx == 0 else False
        ),
        row=row,
        col=col,
        secondary_y=True,
    )

# Update layout with stunning styling
fig.update_layout(
    title={
        'text': '<b>üìà –î–∏–Ω–∞–º–∏–∫–∞ –ö–ü –∏ –î–æ–ª–∏ –ø–æ –û—Ç—Ä–∞—Å–ª—è–º üìä</b><br><sub>–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</sub>',
        'x': 0.5,
        'xanchor': 'center',
        'font': {'size': 24, 'color': colors['text'], 'family': 'Arial Black'}
    },
    height=300 * n_rows,  # Increased height per row
    width=1400,           # Fixed width for better proportions
    plot_bgcolor=colors['bg'],
    paper_bgcolor='white',
    showlegend=True,
    legend=dict(
        orientation='h',
        yanchor='bottom',
        y=1.02,
        xanchor='center',
        x=0.5,
        font=dict(size=14, family='Arial'),
        bgcolor='rgba(255,255,255,0.8)',
        bordercolor='rgba(0,0,0,0.2)',
        borderwidth=1
    ),
    hovermode='x unified',
    margin=dict(l=80, r=80, b=80, t=140, pad=10),
    font=dict(family='Arial', size=12, color=colors['text'])
)

# Update axes styling for all subplots
for i in range(1, n_rows + 1):
    for j in range(1, 3):  # 2 columns
        # Left y-axis (–ö–ü)
        fig.update_yaxes(
            title_text='<b>–ö–ü</b>',
            title_font=dict(size=14, color=colors['kp'], family='Arial Black'),
            tickfont=dict(size=11, color=colors['kp']),
            gridcolor=colors['grid'],
            gridwidth=1,
            zeroline=True,
            zerolinecolor=colors['grid'],
            zerolinewidth=2,
            row=i, col=j, secondary_y=False
        )
        
        # Right y-axis (–î–æ–ª—è,%)
        fig.update_yaxes(
            title_text='<b>–î–æ–ª—è, %</b>',
            title_font=dict(size=14, color=colors['dolya'], family='Arial Black'),
            tickfont=dict(size=11, color=colors['dolya']),
            side='right',
            overlaying='y',
            row=i, col=j, secondary_y=True
        )
        
        # X-axis styling
        fig.update_xaxes(
            title_text='<b>–ü–µ—Ä–∏–æ–¥</b>' if i == n_rows else '',
            title_font=dict(size=14, color=colors['text'], family='Arial Black'),
            tickfont=dict(size=11, color=colors['text']),
            gridcolor=colors['grid'],
            gridwidth=1,
            tickangle=45,
            row=i, col=j
        )

# Update subplot titles with enhanced styling
for i, annotation in enumerate(fig['layout']['annotations']):
    annotation.update(
        font=dict(size=16, color=colors['text'], family='Arial Black'),
        bgcolor='rgba(255,255,255,0.8)',
        bordercolor='rgba(0,0,0,0.2)',
        borderwidth=1,
        borderpad=4
    )

# Add subtle background pattern (optional enhancement)
fig.add_shape(
    type="rect",
    xref="paper", yref="paper",
    x0=0, y0=0, x1=1, y1=1,
    line=dict(color="rgba(0,0,0,0.1)", width=2),
    fillcolor="rgba(248,249,250,0.3)",
    layer="below"
)

# Show the stunning plot
fig.show()

print("üé® –°–æ–∑–¥–∞–Ω –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–π –¥–∞—à–±–æ—Ä–¥ —Å —Ä–æ—Å—Å–∏–π—Å–∫–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π!")
print(f"üìä –í–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ {len(branches)} –æ—Ç—Ä–∞—Å–ª—è–º")
print("‚ú® –ü—Ä–∏–º–µ–Ω–µ–Ω—ã —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –¥–∏–∑–∞–π–Ω–∞ –∏ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–∏")
